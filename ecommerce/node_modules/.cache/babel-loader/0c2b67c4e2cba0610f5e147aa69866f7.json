{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Harshit Saxena/Documents/GitHub/Ecommerce-App/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Harshit Saxena/Documents/GitHub/Ecommerce-App/ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import react,{useEffect}from\"react\";import{useApp}from\"../context/App-context\";import toast,{Toaster}from'react-hot-toast';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ProductCard(_ref){var item=_ref.item;var _useApp=useApp(),state=_useApp.state,dispatch=_useApp.dispatch;var userName=state.userName;function cartHandler(_x){return _cartHandler.apply(this,arguments);}function _cartHandler(){_cartHandler=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(item){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userName==null){toast.error(\"Please Login before adding to cart\");}dispatch({type:\"ADDTOCART\",payload:item});_context.next=4;return axios({method:'post',url:\"http://localhost:3000/cart/\".concat(userName),data:{item:item}}).then(function(response){console.log(response.data);toast.success(\"added to cart\");}).catch(function(error){console.log(error.response);toast.error(\"Invalid Username or Password\");});case 4:case\"end\":return _context.stop();}}},_callee);}));return _cartHandler.apply(this,arguments);}var notify=function notify(){return toast.success(\"added to cart\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"product-card \",children:[/*#__PURE__*/_jsx(\"img\",{src:item.img}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:item.name}),/*#__PURE__*/_jsx(\"h4\",{children:item.highlights}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\u20B9\",\" \",item.price]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return cartHandler(item);},className:\"Cta-Cart\",children:\"Add To Cart\"})]});}","map":{"version":3,"sources":["C:/Users/Harshit Saxena/Documents/GitHub/Ecommerce-App/ecommerce/src/Components/ProductCard.js"],"names":["react","useEffect","useApp","toast","Toaster","axios","ProductCard","item","state","dispatch","userName","cartHandler","error","type","payload","method","url","data","then","response","console","log","success","catch","notify","img","name","highlights","price"],"mappings":"2WAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,KAAuB,wBAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,OAAhB,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,cAAe,SAASC,CAAAA,WAAT,MAA4B,IAANC,CAAAA,IAAM,MAANA,IAAM,aAChBL,MAAM,EADU,CAChCM,KADgC,SAChCA,KADgC,CAC1BC,QAD0B,SAC1BA,QAD0B,CAEvC,GAAMC,CAAAA,QAAQ,CAAEF,KAAK,CAACE,QAAtB,CAFuC,QAGxBC,CAAAA,WAHwB,6IAGvC,iBAA2BJ,IAA3B,kHACI,GAAGG,QAAQ,EAAE,IAAb,CAAkB,CACdP,KAAK,CAACS,KAAN,CAAY,oCAAZ,EACH,CACDH,QAAQ,CAAC,CAACI,IAAI,CAAC,WAAN,CAAkBC,OAAO,CAACP,IAA1B,CAAD,CAAR,CAJJ,sBAMUF,CAAAA,KAAK,CAAC,CACRU,MAAM,CAAE,MADA,CAERC,GAAG,sCAAgCN,QAAhC,CAFK,CAGRO,IAAI,CAAE,CACFV,IAAI,CAAJA,IADE,CAHE,CAAD,CAAL,CAOHW,IAPG,CAOE,SAAUC,QAAV,CAAoB,CACxBC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACF,IAArB,EACAd,KAAK,CAACmB,OAAN,CAAc,eAAd,EACD,CAVG,EAWHC,KAXG,CAWG,SAAUX,KAAV,CAAiB,CACpBQ,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACO,QAAlB,EACDhB,KAAK,CAACS,KAAN,CAAY,8BAAZ,EACF,CAdG,CANV,uDAHuC,8CA0BvC,GAAMY,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,SAAMrB,CAAAA,KAAK,CAACmB,OAAN,iBAAN,EAAf,CACA,mBACI,aAAK,SAAS,CAAC,eAAf,wBACI,YAAK,GAAG,CAAEf,IAAI,CAACkB,GAAf,EADJ,cAEA,aAAK,SAAS,CAAC,cAAf,wBACI,oBACClB,IAAI,CAACmB,IADN,EADJ,cAII,oBAAKnB,IAAI,CAACoB,UAAV,EAJJ,cAKI,+BAAM,GAAN,CAAWpB,IAAI,CAACqB,KAAhB,GALJ,GAFA,cASI,eAAQ,OAAO,CAAE,yBAAIjB,CAAAA,WAAW,CAACJ,IAAD,CAAf,EAAjB,CAAwC,SAAS,CAAC,UAAlD,yBATJ,GADJ,CAcH","sourcesContent":["import react, { useEffect } from \"react\"\r\nimport { useApp } from \"../context/App-context\"\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport axios from \"axios\";\r\n\r\nexport default function ProductCard({item}){\r\n    const {state,dispatch}=useApp()\r\n    const userName=(state.userName)\r\n    async function cartHandler(item) {\r\n        if(userName==null){\r\n            toast.error(\"Please Login before adding to cart\")\r\n        }\r\n        dispatch({type:\"ADDTOCART\",payload:item})\r\n        \r\n        await axios({\r\n            method: 'post',\r\n            url: `http://localhost:3000/cart/${userName}`,\r\n            data: {\r\n                item\r\n            }\r\n          })\r\n          .then(function (response) {\r\n            console.log(response.data)\r\n            toast.success(\"added to cart\")\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error.response)\r\n             toast.error(\"Invalid Username or Password\")\r\n          })\r\n    }\r\n\r\n    const notify = () => toast.success(`added to cart`)\r\n    return (\r\n        <div className=\"product-card \">\r\n            <img src={item.img}/>\r\n        <div className=\"card-content\">\r\n            <h1>\r\n            {item.name}\r\n            </h1>\r\n            <h4>{item.highlights}</h4>\r\n            <h3>â‚¹{\" \"}{item.price}</h3>\r\n        </div> \r\n            <button onClick={()=>cartHandler(item)} className=\"Cta-Cart\">Add To Cart</button>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\n       \r\n        "]},"metadata":{},"sourceType":"module"}