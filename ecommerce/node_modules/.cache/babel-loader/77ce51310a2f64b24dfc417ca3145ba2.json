{"ast":null,"code":"import react, { useReducer } from \"react\";\nimport { AllProducts } from \"../Pages/primaryDB\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SORT\":\n      return { ...state,\n        sortby: action.payload,\n        isFilterApplied: true\n      };\n\n    case \"category-filter\":\n      return { ...state,\n        category: action.payload,\n        isFilterApplied: true\n      };\n  }\n};\n\nexport const [state, dispatch] = useReducer(reducer, {\n  sortby: null,\n  category: null,\n  isFilterApplied: null\n});\nconst {\n  products\n} = useApp();\nconst sortedData = getSordtedData(products, state.sortby);\nconsole.log(sortedData);\nconst filteredData = getFilteredData(products, state.category);","map":{"version":3,"sources":["C:/Users/Harshit Saxena/Documents/GitHub/Ecommerce-App/ecommerce/src/Reducer/AppReducer.js"],"names":["react","useReducer","AllProducts","reducer","state","action","type","sortby","payload","isFilterApplied","category","dispatch","products","useApp","sortedData","getSordtedData","console","log","filteredData","getFilteredData"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,MAAMC,OAAO,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC3B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,MAAL;AACA,aAAO,EAAC,GAAGF,KAAJ;AAAUG,QAAAA,MAAM,EAACF,MAAM,CAACG,OAAxB;AAAgCC,QAAAA,eAAe,EAAC;AAAhD,OAAP;;AACA,SAAK,iBAAL;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAUM,QAAAA,QAAQ,EAACL,MAAM,CAACG,OAA1B;AAAkCC,QAAAA,eAAe,EAAC;AAAlD,OAAP;AAJJ;AAMD,CAPH;;AASE,OAAO,MAAM,CAACL,KAAD,EAAOO,QAAP,IAAiBV,UAAU,CAACE,OAAD,EAAS;AAC/CI,EAAAA,MAAM,EAAC,IADwC;AAE/CG,EAAAA,QAAQ,EAAC,IAFsC;AAG/CD,EAAAA,eAAe,EAAC;AAH+B,CAAT,CAAjC;AAKP,MAAM;AAACG,EAAAA;AAAD,IAAWC,MAAM,EAAvB;AACA,MAAMC,UAAU,GAAGC,cAAc,CAACH,QAAD,EAAUR,KAAK,CAACG,MAAhB,CAAjC;AACAS,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACA,MAAMI,YAAY,GAAGC,eAAe,CAACP,QAAD,EAAUR,KAAK,CAACM,QAAhB,CAApC","sourcesContent":["import react, { useReducer } from \"react\";\r\nimport { AllProducts } from \"../Pages/primaryDB\";\r\n\r\nconst reducer= (state,action)=>{\r\n    switch(action.type){\r\n        case \"SORT\":\r\n        return {...state,sortby:action.payload,isFilterApplied:true};\r\n        case \"category-filter\":\r\n        return {...state,category:action.payload,isFilterApplied:true}\r\n    }\r\n  }\r\n\r\n  export const [state,dispatch]=useReducer(reducer,{\r\n    sortby:null,\r\n    category:null,\r\n    isFilterApplied:null})\r\n\r\n  const {products}=useApp()\r\n  const sortedData = getSordtedData(products,state.sortby)\r\n  console.log(sortedData)\r\n  const filteredData = getFilteredData(products,state.category)\r\n"]},"metadata":{},"sourceType":"module"}